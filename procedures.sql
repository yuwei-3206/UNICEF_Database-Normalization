
SELECT * FROM hc848.UNICEF_RAW_DATA_POP_ALL;
SELECT * FROM UDW_DIM_TIME;
SELECT * FROM UDW_DIM_GENDER;
SELECT * FROM UDW_DIM_COUNTRY;
SELECT * FROM UDW_FACT_POPULATION;

SELECT COUNT(*) FROM hc848.UNICEF_RAW_DATA_POP_ALL; --Total records: 355,640
SELECT COUNT(*) FROM UDW_DIM_TIME; -- 73
SELECT COUNT(*) FROM UDW_DIM_GENDER; -- 2
SELECT COUNT(*) FROM UDW_DIM_COUNTRY; -- 234
SELECT COUNT(*) FROM UDW_FACT_POPULATION; -- 11184

DELETE FROM UDW_FACT_POPULATION;
DELETE FROM UDW_DIM_TIME;
DELETE FROM UDW_DIM_GENDER;
DELETE FROM UDW_DIM_COUNTRY;

CALL LOAD_UDW_DIM_COUNTRY('USAA');
CALL LOAD_UDW_DIM_GENDER('M');
CALL LOAD_UDW_DIM_TIME(2020);

CALL LOAD_UDW_FACT_POPULATION(2009, 2009); -- 107 sec -- insert 466 records
CALL LOAD_UDW_FACT_POPULATION(1950, 1951); -- 205 sec -- insert 932 records
CALL LOAD_UDW_FACT_POPULATION(2010, 2019); -- 947 sec -- insert 4660 records
CALL LOAD_UDW_FACT_POPULATION(1940, 1945); -- 0 sec -- insert 0 records
CALL LOAD_UDW_FACT_POPULATION(2024, 1945); -- error for invalid parameters
CALL LOAD_UDW_FACT_POPULATION('2000', '2000'); -- 101 sec -- insert 466 records
CALL LOAD_UDW_FACT_POPULATION('25-02-2000', '25-03-2000'); -- error for invalid parameters

SELECT * FROM UDW_FACT_POPULATION;
COMMIT;

-- Procedure LOAD_UDW_DIM_TIME 
-- Load dimension table record for time
CREATE OR REPLACE PROCEDURE LOAD_UDW_DIM_TIME (p_YEAR_CODE UDW_DIM_TIME.YEAR_CODE%TYPE) AS
BEGIN
    INSERT INTO UDW_DIM_TIME (YEAR_CODE, DECADE_NAME)
    SELECT DISTINCT pa.TIME_PERIOD, substr(pa.TIME_PERIOD,1,3)||'0s' DECADE_NAME
      FROM hc848.UNICEF_RAW_DATA_POP_ALL pa
     WHERE pa.TIME_PERIOD = p_YEAR_CODE
       AND NOT EXISTS ( SELECT 1 FROM UDW_DIM_TIME dt WHERE dt.YEAR_CODE = pa.TIME_PERIOD );
END;

-- Procedure LOAD_UDW_DIM_GENDER
-- Load dimension table record for gender
CREATE OR REPLACE PROCEDURE LOAD_UDW_DIM_GENDER (p_GENDER_CODE UDW_DIM_GENDER.GENDER_CODE%TYPE) AS
BEGIN
    INSERT INTO UDW_DIM_GENDER (GENDER_CODE, GENDER_NAME)
    SELECT DISTINCT CASE WHEN pa.SEX LIKE '_: %' THEN SUBSTR(pa.SEX, 1, 1) END AS GENDER_CODE
          ,CASE WHEN pa.SEX LIKE '_: %' THEN SUBSTR(pa.SEX, 4) END AS GENDER_NAME
      FROM hc848.UNICEF_RAW_DATA_POP_ALL pa
     WHERE pa.SEX LIKE '_: %'
       AND SUBSTR(pa.SEX, 1, 1) = p_GENDER_CODE
       AND NOT EXISTS ( SELECT 1 FROM UDW_DIM_GENDER dg WHERE dg.GENDER_CODE = SUBSTR(pa.SEX, 1, 1))
    ;
END;

-- Procedure LOAD_UDW_DIM_COUNTRY
-- Load dimension table record for country
CREATE OR REPLACE PROCEDURE LOAD_UDW_DIM_COUNTRY (p_COUNTRY_CODE UDW_DIM_COUNTRY.COUNTRY_CODE%TYPE) AS
BEGIN
    INSERT INTO UDW_DIM_COUNTRY (COUNTRY_CODE, COUNTRY_NAME, REGION_NAME)
    SELECT DISTINCT CASE WHEN pa.REF_AREA LIKE '___: %' THEN SUBSTR(pa.REF_AREA, 1, 3) END AS COUNTRY_CODE
          ,CASE WHEN pa.REF_AREA LIKE '___: %' THEN SUBSTR(pa.REF_AREA,6) END AS COUNTRY_NAME
          ,'Unknown' REGION_NAME
      FROM hc848.UNICEF_RAW_DATA_POP_ALL pa
     WHERE pa.REF_AREA LIKE '___: %'
       AND SUBSTR(pa.REF_AREA, 1, 3) = p_COUNTRY_CODE
       AND NOT EXISTS ( SELECT 1 FROM UDW_DIM_COUNTRY dt WHERE dt.COUNTRY_CODE = SUBSTR(pa.REF_AREA, 1, 3))
    ;
END;

-- Procedure LOAD_UDW_FACT_POPULATION
-- Load fact table record for population
CREATE OR REPLACE PROCEDURE LOAD_UDW_FACT_POPULATION (
    p_BEGIN_YEAR UDW_DIM_TIME.YEAR_CODE%TYPE
  , p_END_YEAR UDW_DIM_TIME.YEAR_CODE%TYPE) 
AS
BEGIN
    IF p_BEGIN_YEAR > p_END_YEAR THEN 
        RAISE_APPLICATION_ERROR(-20001, 'Invalid parameters: BEGIN_YEAR must be less than or equal to END_YEAR.');
    END IF;

    DELETE FROM UDW_FACT_POPULATION;

    FOR r IN (
        SELECT pa.TIME_PERIOD YEAR_CODE
              ,CASE WHEN pa.SEX LIKE '_: %' THEN SUBSTR(pa.SEX, 1, 1) END AS GENDER_CODE
              ,CASE WHEN pa.REF_AREA LIKE '___: %' THEN SUBSTR(pa.REF_AREA, 1, 3) END AS COUNTRY_CODE
              ,max(case when INDICATOR like 'DM_POP_TOT%' then OBS_VALUE end)    * 1000 DM_POP_TOT
              ,max(case when INDICATOR like 'DM_POP_U5%' then OBS_VALUE end)     * 1000 DM_POP_U5
              ,max(case when INDICATOR like 'DM_POP_ADLCNT%' then OBS_VALUE end) * 1000 DM_POP_ADLCNT
              ,max(case when INDICATOR like 'DM_POP_15TO24%' then OBS_VALUE end) * 1000 DM_POP_15TO24
              ,max(case when INDICATOR like 'DM_POP_U18%' then OBS_VALUE end)    * 1000 DM_POP_U18
          FROM hc848.UNICEF_RAW_DATA_POP_ALL pa
         WHERE pa.TIME_PERIOD BETWEEN 2020 AND 2020
      GROUP BY pa.TIME_PERIOD            
              ,CASE WHEN pa.SEX LIKE '_: %' THEN SUBSTR(pa.SEX, 1, 1) END   
              ,CASE WHEN pa.REF_AREA LIKE '___: %' THEN SUBSTR(pa.REF_AREA, 1, 3) END
    ) LOOP
    
      LOAD_UDW_DIM_TIME(r.YEAR_CODE);
      LOAD_UDW_DIM_GENDER(r.GENDER_CODE);
      LOAD_UDW_DIM_COUNTRY(r.COUNTRY_CODE);
      
      IF r.GENDER_CODE IS NOT NULL AND r.COUNTRY_CODE IS NOT NULL THEN
      INSERT INTO UDW_FACT_POPULATION (
              YEAR_CODE
             ,GENDER_CODE
             ,COUNTRY_CODE
             ,DM_POP_TOT
             ,DM_POP_U5
             ,DM_POP_ADLCNT
             ,DM_POP_15TO24 
             ,DM_POP_U18
      ) VALUES (
              r.YEAR_CODE
             ,r.GENDER_CODE
             ,r.COUNTRY_CODE
             ,r.DM_POP_TOT
             ,r.DM_POP_U5
             ,r.DM_POP_ADLCNT
             ,r.DM_POP_15TO24
             ,r.DM_POP_U18
      );
      END IF;
    END LOOP;
END;
